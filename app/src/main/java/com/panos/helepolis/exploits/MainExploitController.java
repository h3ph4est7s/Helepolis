package com.panos.helepolis.exploits;

import android.os.AsyncTask;
import android.support.v4.app.FragmentActivity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Spinner;
import android.widget.TextView;

import com.panos.helepolis.R;
import com.panos.helepolis.mainFragments.ExploitAlertFragment;

import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Enumeration;

import dalvik.system.DexFile;

/**
 * Created by takhs on 15/6/2015.
 */
public class MainExploitController extends AsyncTask<Void, Void, Void> {
	public static final int RUNLEVEL_CHECK = 1;
	public static final int RUNLEVEL_RUN = 2;
	private FragmentActivity parent;
	private Integer runLevel;
	private Exploit expObject;
	ArrayList<Exploit> workingExploitsArrayList = new ArrayList<>();
	private Result result;
	private ExploitArguments args;

	public MainExploitController(FragmentActivity activity, Integer rlvl) {
		this(activity, rlvl, null);
	}

	public MainExploitController(FragmentActivity activity, Integer rlvl, Exploit exp) {
		parent = activity;
		runLevel = rlvl;
		expObject = exp;
		args = new ExploitArguments(((TextView) parent.findViewById(R.id.ipText)).getText().toString(),
				((TextView) parent.findViewById(R.id.providerText)).getText().toString(),
				((TextView) parent.findViewById(R.id.gatewayText)).getText().toString());
	}


	@Override
	protected Void doInBackground(Void... params) {
		switch (runLevel) {
			case 0:
				return null;
			case RUNLEVEL_CHECK:
				exploitsCheck();
				break;
			case RUNLEVEL_RUN:
				result = expObject.run();
				break;
		}
		return null;
	}

	protected void exploitsCheck() {
		workingExploitsArrayList.clear();
		ArrayList<String> exploits = new ArrayList<>();
		try {
			DexFile df = new DexFile(parent.getApplicationContext().getPackageCodePath());
			for (Enumeration<String> iter = df.entries(); iter.hasMoreElements(); ) {
				String element = iter.nextElement();
				String[] str = element.split("\\.");
				String s = str[str.length-1];
				if (element.startsWith("com.panos.helepolis.exploits") && s.startsWith("ExpMod")) {
					exploits.add(element);
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		if (exploits.isEmpty()) {
			return;
		}

		for (String exploit : exploits) {
			try {
				Constructor c = Class.forName(exploit).getConstructor(ExploitArguments.class);
				Exploit expTemp = (Exploit) c.newInstance(args);
				if (expTemp.check().getStatusCode().equals(Result.STATUS_SUCCESS)) {
					workingExploitsArrayList.add(expTemp);
				}
			} catch (InstantiationException e) {
				e.printStackTrace();
			} catch (ClassNotFoundException e) {
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			} catch (NoSuchMethodException e) {
				e.printStackTrace();
			} catch (InvocationTargetException e) {
				e.printStackTrace();
			}
		}
		return;
	}

	@Override
	protected void onPostExecute(Void s) {
		super.onPostExecute(s);
		switch (runLevel) {
			case 0:
				return;
			case RUNLEVEL_CHECK:
				if (workingExploitsArrayList.isEmpty()) {
					ExploitAlertFragment wifiAlertFragment = new ExploitAlertFragment();
					// Show Alert DialogFragment
					wifiAlertFragment.show(parent.getSupportFragmentManager(), "Alert Dialog Fragment");
					return;
				}
				View testview = parent.getLayoutInflater().inflate(R.layout.exploit_base, (ViewGroup) parent.findViewById(R.id.router_pwn_root_layout));
				Spinner exploitsSpinner = (Spinner) testview.findViewById(R.id.exploits_spinner);
				ArrayList<String> spinnerArray = new ArrayList<String>();
				spinnerArray.add("Select");
				for (Exploit workingExploit : workingExploitsArrayList) {
					String input = workingExploit.getClass().getName();
					String[] test = input.split("\\.");
					spinnerArray.add(test[test.length - 1]);
				}
				ArrayAdapter<String> adapter = new ArrayAdapter<String>(parent,android.R.layout.simple_spinner_item,spinnerArray);
				adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
				exploitsSpinner.setAdapter(adapter);
				exploitsSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
					@Override
					public void onItemSelected(AdapterView<?> parentV, View view, int position, long id) {
						String exploit = parentV.getItemAtPosition(position).toString();
						if (exploit.equals("Select")) return;
						for (Exploit workingExploit : workingExploitsArrayList) {
							String[] chankList = workingExploit.getClass().toString().split("\\.");
							if (chankList[chankList.length-1].equals(exploit)) {
								new MainExploitController(parent, RUNLEVEL_RUN, workingExploit).execute();
							}
						}
					}

					@Override
					public void onNothingSelected(AdapterView<?> parent) {

					}
				});
				break;
			case RUNLEVEL_RUN:
				if(result.getStatusCode() == Result.STATUS_SUCCESS){
					View testViewResult = parent.getLayoutInflater().inflate(R.layout.exploit_result_message_box, (ViewGroup) parent.findViewById(R.id.router_pwn_root_layout));
					((TextView) testViewResult.findViewById(R.id.exploit_results)).setText(result.getResultString());
				}
		}
	}
}